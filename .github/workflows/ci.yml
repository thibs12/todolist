# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Cache NuGet packages
      uses: actions/cache@v2
      with:
        path: ~/.nuget
        key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore src/TodoApi/TodoApi.sln
    - name: Build
      run: dotnet build src/TodoApi/TodoApi.sln
    - name: Test
      run: |
        dotnet test src/TodoApi.UnitTests/TodoApi.UnitTests.csproj
        dotnet test src/TodoApi.IntegrationTests/TodoApi.IntegrationTests.csproj
  lint:
  
      runs-on: ubuntu-latest
      
      steps: 
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            # super-linter needs the full git history to get the
            # list of files that changed across commits
            fetch-depth: 0
        - name: Super-Linter
          uses: super-linter/super-linter@v5.7.2
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: SonarScanner for .NET 8 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@v2.3.2
        with:
          # The key of the SonarQube project
          sonarProjectKey: thibs12_todolist
          # The name of the SonarQube project
          sonarProjectName:  todolist
          # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
          sonarOrganization: thibs12
          # Optional command arguments to dotnet build
          dotnetBuildArguments: src/TodoApi/TodoApi.sln
          # Optional command arguments to dotnet test
          dotnetTestArguments: src/TodoApi.UnitTests/TodoApi.UnitTests.csproj --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          # Optional extra command arguments the the SonarScanner 'begin' command
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
        
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
